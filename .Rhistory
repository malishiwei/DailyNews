getwd()
price<-read.csv("DJIA_table.csv",header=T)
words<-read.csv("Combined_News_DJIA.cvs",header=T)
words<-read.csv("Combined_News_DJIA.csv",header=T)
price<-read.csv("DJIA_table.csv",header=T)
words<-read.csv("Combined_News_DJIA.csv",header=T)
library(tm)
library(RWeka)
install.packages("RWeka")
library(tm)
library(RWeka)
library(magrittr)
library(Matrix)
library(glmnet)
library(ROCR)
install.packages(ROCR)
install.packages("ROCR")
library(tm)
library(RWeka)
library(magrittr)
library(Matrix)
library(glmnet)
library(ROCR)
library(ggplot2)
price<-read.csv("DJIA_table.csv",header=T)
words<-read.csv("Combined_News_DJIA.csv",header=T)
data$Date <- as.Date(data$Date)
words$Date <- as.Date(words$Date)
words$all <- paste(data$Top1, data$Top2, data$Top3, data$Top4, data$Top5, data$Top6,
data$Top7, data$Top8, data$Top9, data$Top10, data$Top11, data$Top12,
data$Top13, data$Top14, data$Top15, data$Top16, data$Top17, data$Top18,
data$Top19, data$Top20, data$Top21, data$Top22, data$Top23, data$Top24,
data$Top25, sep=' <s> ')
library(tm)
library(RWeka)
library(magrittr)
library(Matrix)
library(glmnet)
library(ROCR)
library(ggplot2)
price<-read.csv("DJIA_table.csv",header=T)
data<-read.csv("Combined_News_DJIA.csv",header=T)
data$Date <- as.Date(data$Date)
data$all <- paste(data$Top1, data$Top2, data$Top3, data$Top4, data$Top5, data$Top6,
data$Top7, data$Top8, data$Top9, data$Top10, data$Top11, data$Top12,
data$Top13, data$Top14, data$Top15, data$Top16, data$Top17, data$Top18,
data$Top19, data$Top20, data$Top21, data$Top22, data$Top23, data$Top24,
data$Top25, sep='<s>')
data$Date <- as.Date(data$Date)
data$all <- paste(data$Top1, data$Top2, data$Top3, data$Top4, data$Top5, data$Top6,
data$Top7, data$Top8, data$Top9, data$Top10, data$Top11, data$Top12,
data$Top13, data$Top14, data$Top15, data$Top16, data$Top17, data$Top18,
data$Top19, data$Top20, data$Top21, data$Top22, data$Top23, data$Top24,
data$Top25, sep='<s>')
# Get rid of those pesky b's and backslashes
data$all <- gsub('b"|b\'|\\\\|\\"', "", data$all)
# Get rid of all punctuation except headline separators
data$all <- gsub("([<>])|[[:punct:]]", "\\1", data$all)
# Reduce to only the three columns we need.
data <- data[, c('Date', 'Label', 'all')]
control <- list(
removeNumbers = TRUE,
tolower = TRUE,
# exclude stopwords and headline tokens
stopwords = c(stopwords(kind = 'SMART'), '<s>')
)
dtm <- Corpus(VectorSource(data$all)) %>%
DocumentTermMatrix(control=control)
stock_train<-price[split_index]
split_index <- data$Date <= '2014-12-31'
ytrain <- as.factor(data$Label[split_index])
stock_train<-price[split_index]
split_index <- data$Date <= '2014-12-31'
ytrain <- as.factor(data$Label[split_index])
stock_train<-price[split_index]
stock_train<-diff(log(price$Close[split_index]))
xtrain <- Matrix(as.matrix(dtm)[split_index, ], sparse=TRUE)
xtrain <- Matrix(as.matrix(dtm)[split_index, ], sparse=TRUE)[2:,]
xtrain <- Matrix(as.matrix(dtm)[split_index, ], sparse=TRUE)[2:,:]
xtrain <- Matrix(as.matrix(dtm)[split_index, ], sparse=TRUE)[-1,]
dim(xtrain)
length(stock_train)
split_index <- data$Date <= '2014-12-31'
ytrain <- as.factor(data$Label[split_index])
stock_train<-diff(log(price$Close[split_index]))
xtrain <- Matrix(as.matrix(dtm)[split_index, ], sparse=TRUE)[-1,]
ytest <- as.factor(data$Label[!split_index])
stock_test<-diff(log(price$Close[!split_index]))
xtest <- Matrix(as.matrix(dtm)[!split_index, ], sparse=TRUE)[-1,]
# Train the model
glmnet.fit <- cv.glmnet(x=xtrain, y=stock_train, family='binomial', alpha=0)
dim(xtrain)
dim(xtest)
LR_fit<-lm(stock_train~xtrain)
LR_fit<-lm(stock_train~.,data=cbind(xtrain,stock_train))
LR_fit<-lm(stock_train~.,data=cbind(xtrain,stock_train))
LR_fit<-lm(stock_train~.,data=as.data.frame(cbind(xtrain,stock_train)))
as.data.frame(cbind(xtrain,stock_train)
as.data.frame(cbind(xtrain,stock_train))
cbind(xtrain,stock_train)
dim(cbind(xtrain,stock_train))
as.data.frame(cbind(xtrain,stock_train))
m<-cbind(xtrain,stock_train)
class(m)
as.matrix(m)
m<-as.matrix(cbind(xtrain,stock_train))
class(m)
m<-as.data.frame(as.matrix(cbind(xtrain,stock_train)))
Train<-as.data.frame(as.matrix(cbind(xtrain,stock_train)))
LR_fit<-lm(stock_train~.,data=Train)
LR_fit
LR_fit<-lm(stock_train~.,data=Train)
rstudio.exe --max-ppsize=5000000
max-ppsize=5000000
max-ppsize<-5000000
R.exe --max-pp-size=500000
max-pp-size=500000
--max-ppsize=100000
max-ppsize=100000
getwd()
